:comment combinators
:def I \x.x
:def K \x.\y.x
:def S \f.\g.\x.f x (g x)
:def Y \f.(\g.f (g g)) (\g.f (g g))

:comment natural numbers
:def succ \n.\f.\x.n f (f x)
:def pred \n.\f.\x.n (\g.\h.h (g f)) (K x) I
:def 0 \f.\x.x
:def 1 \f.\x.f x
:def 2 \f.\x.f (f x)
:def 3 \f.\x.f (f (f x))
:def 4 \f.\x.f (f (f (f x)))
:def 5 succ 4
:def 6 succ 5
:def 7 succ 6
:def 8 succ 7
:def 9 succ 8
:def 10 succ 9
:def + \m.\n.\f.\x.m f (n f x)
:def - \m.\n.n pred m
:def * \m.\n.m (+ n) 0
:def ^ \m.\n.n (* m) 1

:comment booleans
:def TRUE \t.\f.t
:def FALSE \t.\f.f
:comment not
:def ~ \a.a FALSE TRUE
:comment and
:def & \a.\b.a b a
:comment or
:def | \a.\b.a a b
:comment material implication
:def -> \a.\b.| (~ a) b
:comment bi-implication/equality
:def <-> \a.\b.a b (~ b)
:comment xor/inequality
:def </> \a.\b.a (~ b) b

:comment natural predicates and comparison
:def IS-0 \n.n (K FALSE) TRUE
:def >= \m.\n.IS-0 (- n m)
:def <= \m.\n.IS-0 (- m n)
:def > \m.\n.~ (<= m n)
:def < \m.\n.~ (>= m n)
:def = \m.\n.& (IS-0 (- m n)) (IS-0 (- n m))
